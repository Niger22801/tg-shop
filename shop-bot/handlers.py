import random
import sqlite3

from aiogram import Bot, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery,ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardButton, InlineKeyboardMarkup

from config import Ser
from config import Kiber
from config import Kiber1
from config import Kiber2
from config import Kiber4
from config import Updatee
from config import Send
from config import Zakaz
from config import Tcodee
from config import Tcodee1
from keyboard import keyboard12, online, adminpanel, under, updater, gg, prisekey, reply,  keyboard_1,nazad_kb
from main import dp

# @dp.message()
# async def wasd(message: Message, bot: Bot):
#     print('vavavava')
#     print(message.from_user.id)
#     await message.answer(message.video.file_id)
#     #await bot.send_audio(message.from_user.id, 'CQACAgIAAxkBAAOFZdG38Ql4Lcz-ESJ9G7EfvJWEo88AAlE8AALAuJBKzFOlwqzQI_E0BA')
# @dp.message()
# async def sendphoto(message: Message, state: FSMContext):
#     await message.answer( text=str(message.photo[-1].file_id))
# @dp.message(F.text)
# async def wasd(callback:CallbackQuery, bot: Bot):
#     await bot.send_message(callback.from_user.id,text=f'{str(callback.from_user.id)}')

joinedFile = open("joined.txt", "r")
joinedUsers = set()
for line in joinedFile:
    joinedUsers.add(line.strip())
joinedFile.close()

con = sqlite3.connect("offers.db")
cursor = con.cursor()

con.commit()
a = [0]
nnn = 0


# @dp.message(Command('prise'))
# async def prise(callback: CallbackQuery, state: FSMContext, bot: Bot):
#     await bot.send_message(group_id,text='–°–æ–æ–±—â–µ–Ω–∏–µ')
# AgACAgIAAxkBAAN1Zg2d4jbfUfS-T_-bx3FTudPr8AIAAhjhMRvubHBITqLJzG3bmNcBAAMCAAN4AAM0BA
# ----------------------------------------------
chat_id1 = '1488'
@dp.message(F.text == '/start')
async def start(callback: Message, state: FSMContext, bot: Bot):
    for a in range(callback.message_id-10,callback.message_id):
        try:
            await bot.delete_message(chat_id=callback.chat.id,message_id=a)
        except:
            print('gg')
    global chat_id1
    chat_id1 = callback.chat.id
    await state.clear()
    if not str(callback.chat.id) in joinedUsers:
        joinedFile = open("joined.txt", "a")
        joinedFile.write(str(callback.chat.id) + "\n")
    await bot.send_message(callback.from_user.id,
                           f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º {callback.from_user.full_name} \n–ù–∞—Å—Ç–∞–ª–æ –≤—Ä–µ–º—è —É–≥–ª—É–±–∏—Ç—å—Å—è –≤ –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫–∞ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª.\n–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º: \n\n- –ë—ã—Å—Ç—Ä–æ–µ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏–µ —Å –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–æ–º –º–∞–≥–∞–∑–∏–Ω–∞ üëî\n\n- –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ ‚úåüèª\n\n- –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–∞–∂–Ω–æ–π –¥–ª—è –≤–∞—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ ‚ÑπÔ∏è\n\n–ò –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ‚Ä¶',
                           reply_markup=keyboard12)
    await state.update_data(id=callback.message_id)


@dp.message(F.text == '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
async def search(callback: Message, state: FSMContext, bot: Bot):
    await state.clear()

    for a in range(callback.message_id-10,callback.message_id):
        try:
            await bot.delete_message(chat_id=callback.chat.id,message_id=a)
        except:
            print('gg')

    await bot.send_message(callback.from_user.id,
                           f'COOLSHOP ¬©\n\n–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º, {callback.from_user.full_name} \n–ù–∞—Å—Ç–∞–ª–æ –≤—Ä–µ–º—è —É–≥–ª—É–±–∏—Ç—å—Å—è –≤ –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫–∞ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª.\n–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º: \n\n- –ë—ã—Å—Ç—Ä–æ–µ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏–µ —Å –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–æ–º –º–∞–≥–∞–∑–∏–Ω–∞ üëî\n\n- –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ ‚úåüèª\n\n- –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–∞–∂–Ω–æ–π –¥–ª—è –≤–∞—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ ‚ÑπÔ∏è\n\n–ò –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ‚Ä¶',
                           reply_markup=keyboard12)
    await state.update_data(id=callback.message_id)

# --------------------------------------------
@dp.callback_query(F.data == 'search')
async def search(callback: CallbackQuery, state: FSMContext, bot: Bot):
    await bot.send_message(callback.from_user.id, text='–í–≤–µ–¥–∏—Ç–µ –∞—Ç—Ä–∏–±—É—Ç –ø–æ–∏—Å–∫–∞')
    await state.set_state(Ser.name)


@dp.message(Ser.name)
async def ser(callback: CallbackQuery, state: FSMContext, bot: Bot):
    cursor.execute(f'SELECT * FROM nike WHERE name = ?', (str(callback.text),))
    for off in cursor.fetchall():
        await bot.send_photo(callback.from_user.id, photo=off[4])
        await  bot.send_message(callback.from_user.id, f'{off[1]}          \n\n–¶–µ–Ω–∞: {off[2]}\n\n–†–∞–∑–º–µ—Ä—ã: {off[3]}',
                                reply_markup=gg)
    con.commit()

    cursor.execute(f'SELECT * FROM adidas WHERE name = ?', (str(callback.text),))
    for off in cursor.fetchall():
        await bot.send_photo(callback.from_user.id, photo=off[4])
        await  bot.send_message(callback.from_user.id, f'{off[1]}          \n\n–¶–µ–Ω–∞: {off[2]}\n\n–†–∞–∑–º–µ—Ä—ã: {off[3]}',
                                reply_markup=gg)
    con.commit()

    cursor.execute(f'SELECT * FROM puma WHERE name = ?', (str(callback.text),))
    for off in cursor.fetchall():
        await bot.send_photo(callback.from_user.id, photo=off[4])
        await  bot.send_message(callback.from_user.id, f'{off[1]}          \n\n–¶–µ–Ω–∞: {off[2]}\n\n–†–∞–∑–º–µ—Ä—ã: {off[3]}',
                                reply_markup=gg)
    con.commit()

    cursor.execute(f'SELECT * FROM balance WHERE name = ?', (str(callback.text),))
    for off in cursor.fetchall():
        await bot.send_photo(callback.from_user.id, photo=off[4])
        await  bot.send_message(callback.from_user.id, f'{off[1]}          \n\n–¶–µ–Ω–∞: {off[2]}\n\n–†–∞–∑–º–µ—Ä—ã: {off[3]}',
                                reply_markup=gg)
    con.commit()

    cursor.execute(f'SELECT * FROM other WHERE name = ?', (str(callback.text),))
    for off in cursor.fetchall():
        await bot.send_photo(callback.from_user.id, photo=off[4])
        await  bot.send_message(callback.from_user.id, f'{off[1]}          \n\n–¶–µ–Ω–∞: {off[2]}\n\n–†–∞–∑–º–µ—Ä—ã: {off[3]}',
                                reply_markup=gg)
    con.commit()

    cursor.execute(f'SELECT * FROM reebok WHERE name = ?', (str(callback.text),))
    for off in cursor.fetchall():
        await bot.send_photo(callback.from_user.id, photo=off[4])
        await  bot.send_message(callback.from_user.id, f'{off[1]}          \n\n–¶–µ–Ω–∞: {off[2]}\n\n–†–∞–∑–º–µ—Ä—ã: {off[3]}',
                                reply_markup=gg)
    con.commit()
    await state.clear()


# --------------------------------------------
@dp.callback_query(F.data == 'get_code')
@dp.callback_query(F.data == 'get_code')
async def code(callback: CallbackQuery, state: FSMContext, bot: Bot):
    await bot.send_message(callback.from_user.id,
                           text='üì≤–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –±–µ–∑ "+" –≤–Ω–∞—á–∞–ª–µ: 375331111111')
    await state.set_state(Tcodee1.name)


@dp.message(Tcodee1.name)
async def code(callback: CallbackQuery, state: FSMContext, bot: Bot):
    cursor.execute(f"SELECT * FROM code WHERE number={str(callback.text)}")
    for off in cursor.fetchall():
        await  bot.send_message(callback.from_user.id, f"–í–∞—à —Ç—Ä–µ–∫ –∫–æ–¥:   {off[2]}")
    if not callback.text in cursor.fetchall():
        await bot.send_message(callback.from_user.id, text='–ó–∞–ø–∏—Å–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ', reply_markup=nazad_kb)

    con.commit()




# --------------------------------------------
@dp.callback_query(F.data == 'tcode')
async def tcode(callback: CallbackQuery, state: FSMContext, bot: Bot):
    await bot.send_message(callback.from_user.id, text='–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –±–µ–∑ "+" –≤ –Ω–∞—á–∞–ª–µ')
    await state.set_state(Tcodee.name)


@dp.message(Tcodee.name)
async def tcode(callback: CallbackQuery, state: FSMContext, bot: Bot):
    await state.update_data(num=callback.text)
    await bot.send_message(callback.from_user.id, text='–í–≤–µ–¥–∏—Ç–µ —Ç—Ä–µ–∫ –∫–æ–¥')
    await state.set_state(Tcodee.name1)


@dp.message(Tcodee.name1)
async def tcode(callback: CallbackQuery, state: FSMContext, bot: Bot):
    data1 = await state.get_data()
    cursor.execute(f"INSERT INTO code (number, trek) VALUES ({str(data1['num'])}, {str(callback.text)})")
    con.commit()
    await bot.send_message(callback.from_user.id, text='–î–æ–±–∞–≤–ª–µ–Ω–æ')
    await state.clear()


# -------------------------------------------
@dp.callback_query(F.data == 'update')
async def upd(callback: CallbackQuery, state: FSMContext, bot: Bot):
    cursor.execute("SELECT * FROM offers")
    for off in cursor.fetchall():
        await  bot.send_message(callback.from_user.id, f"{off[0]} - {off[1]}")
    await bot.send_message(callback.from_user.id, text='–í–≤–µ–¥–∏—Ç–µ id —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å')
    await state.set_state(Updatee.name)
    con.commit()


#
# @dp.callback_query(F.data == 'nike_up')
# async def upd(callback: CallbackQuery, state: FSMContext, bot: Bot):
#     cursor.execute("SELECT * FROM nike")
#     for off in cursor.fetchall():
#         await  bot.send_message(callback.from_user.id, f"{off[0]} - {off[1]}")
#     await bot.send_message(callback.from_user.id, text='–í–≤–µ–¥–∏—Ç–µ id —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å')
#     await state.set_state(Updatee.name)
#     await state.update_data(firm='nike')
#     con.commit()


@dp.message(Updatee.name)
async def upd(callback: CallbackQuery, state: FSMContext, bot: Bot):
    await state.update_data(id=callback.text)
    await bot.send_message(callback.from_user.id, text='–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ —Ä–∞–∑–º–µ—Ä—ã')
    await state.set_state(Updatee.name1)


@dp.message(Updatee.name1)
async def upd(callback: CallbackQuery, state: FSMContext, bot: Bot):
    data1 = await state.get_data()
    cursor.execute(f"UPDATE offers SET sizes =? WHERE id=?", (str(callback.text), str(data1["id"])))
    # cursor.execute(f'UPDATE {data1["firm"]} SET size ={str(callback.text)} WHERE id={str(data1["id"])}')
    con.commit()
    await bot.send_message(callback.from_user.id, text='–æ–±–Ω–æ–≤–ª–µ–Ω–æ')
    await state.clear()


# ------------------------------------------
# @dp.callback_query(F.data == 'delete')
# async def minus(callback: CallbackQuery, state: FSMContext, bot: Bot):
#     await bot.send_message(callback.from_user.id,text='–í—ã–±—Ä–∏—Ç–µ —Ç–∏–ø —Ç–æ–≤–∞—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è', reply_markup=offers_del)

@dp.callback_query(F.data == 'cloth_del')
async def minus(callback: CallbackQuery, state: FSMContext, bot: Bot):
    cursor.execute("SELECT * FROM cloth")
    for off in cursor.fetchall():
        await  bot.send_message(callback.from_user.id, f"{off[0]} - {off[1]}")
    await bot.send_message(callback.from_user.id, text='–í–≤–µ–¥–∏—Ç–µ id —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å')
    await state.set_state(Kiber4.name)
    await state.update_data(type='cloth')
    con.commit()


@dp.callback_query(F.data == 'shoes_del')
async def minus(callback: CallbackQuery, state: FSMContext, bot: Bot):
    cursor.execute("SELECT * FROM shoes")
    for off in cursor.fetchall():
        await  bot.send_message(callback.from_user.id, f"{off[0]} - {off[1]}")
    await bot.send_message(callback.from_user.id, text='–í–≤–µ–¥–∏—Ç–µ id —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å')
    await state.set_state(Kiber4.name)
    await state.update_data(type='shoes')
    con.commit()


@dp.callback_query(F.data == 'other_del')
async def minus(callback: CallbackQuery, state: FSMContext, bot: Bot):
    cursor.execute("SELECT * FROM other")
    for off in cursor.fetchall():
        await  bot.send_message(callback.from_user.id, f"{off[0]} - {off[1]}")
    await bot.send_message(callback.from_user.id, text='–í–≤–µ–¥–∏—Ç–µ id —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å')
    await state.set_state(Kiber4.name)
    await state.update_data(type='other')
    con.commit()


@dp.message(Kiber4.name)
async def minus(callback: CallbackQuery, state: FSMContext, bot: Bot):
    data1 = await state.get_data()
    cursor.execute(f'DELETE FROM {data1["type"]} WHERE id = ?', (int(callback.text),))
    con.commit()
    await bot.send_message(callback.from_user.id, text='–£–¥–∞–ª–µ–Ω–æ')
    await state.clear()


# -----------------------------------------
@dp.callback_query(F.data == 'offersss')
async def offer(callback: CallbackQuery, state: FSMContext, bot: Bot):
    await bot.send_message(callback.from_user.id,
                           '–≠—Ç–æ –Ω–∞—á–∞–ª–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞\n\n–£ –≤–∞—Å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–µ–≥ –ø—Ä–æ—Ñ–∏–ª—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º\n\n')
    await bot.send_message(callback.from_user.id,
                           text='–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏\n\n–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –º–æ–∂–Ω–æ –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –ø—Ä–∏ –ø–æ–º–æ—â–∏ /start')
    await state.set_state(Zakaz.name1)


@dp.message(Zakaz.name1)
async def offer(callback: CallbackQuery, state: FSMContext, bot: Bot):
    await state.update_data(count=callback.text)
    await bot.send_message(callback.from_user.id,
                           text='–í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä\n\n–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –º–æ–∂–Ω–æ –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –ø—Ä–∏ –ø–æ–º–æ—â–∏ /start')
    await state.set_state(Zakaz.name2)


@dp.message(Zakaz.name2)
async def offer(callback: CallbackQuery, state: FSMContext, bot: Bot):
    await state.update_data(size=str(callback.text))
    await bot.send_message(callback.from_user.id,
                           text='–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏\n\n–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –º–æ–∂–Ω–æ –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –ø—Ä–∏ –ø–æ–º–æ—â–∏ /start',
                           reply_markup=reply)


@dp.callback_query(F.data == 'bel')
async def offer(callback: CallbackQuery, state: FSMContext, bot: Bot):
    await bot.send_message(callback.from_user.id,
                           text='–î–ª—è –∑–∞–∫–∞–∑–∞ –ë–µ–ª–ø–æ—á—Ç–æ–π:\n1:–§–ò–û\n2:–ü–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è\n3:–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n4:–ò–Ω–¥–µ–∫—Å')
    await state.update_data(post='–ë–µ–ª–ø–æ—á—Ç–∞')
    await state.set_state(Zakaz.name3)


@dp.callback_query(F.data == 'euro')
async def offer(callback: CallbackQuery, state: FSMContext, bot: Bot):
    await bot.send_message(callback.from_user.id,
                           text='–î–ª—è –∑–∞–∫–∞–∑–∞ –ï–≤—Ä–æ–ø–æ—á—Ç–æ–π:\n1:–§–ò–û\n2:–ù–æ–º–µ—Ä –¢–µ–ª–µ—Ñ–æ–Ω–∞ \n3:–ê–¥—Ä–µ—Å –∏–ª–∏ –Ω–æ–º–µ—Ä –æ—Ç–¥–µ–ª–µ–Ω–∏—è –≤ –≥–æ—Ä–æ–¥–µ –ï–≤—Ä–æ–ø–æ—á—Ç—ã')
    await state.update_data(post='–ï–≤—Ä–æ–ø–æ—á—Ç–∞')
    await state.set_state(Zakaz.name3)


@dp.message(Zakaz.name3)
async def offer(callback: CallbackQuery, state: FSMContext, bot: Bot):
    await bot.send_message(callback.from_user.id, '–ñ–¥–∏—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞')
    data1 = await state.get_data()
    n1 = data1['n']
    cursor.execute(f"SELECT * FROM {data1['type']}")
    off = cursor.fetchall()[n1]
    await bot.send_photo(callback.from_user.id, photo=off[3])
    await bot.send_message(chat_id=1488076193,
                           text=f'–ù–∞–∑–≤–∞–Ω–∏–µ: {off[0]}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {data1["count"]}\n–†–∞–∑–º–µ—Ä: {data1["size"]}\n–ü–æ–∫—É–ø–∞—Ç–µ–ª—å: @{callback.from_user.username}, {callback.from_user.full_name}\n\n{data1["post"]}:\n{callback.text}')
    await state.clear()


# ----------------------------------------------
@dp.callback_query(F.data == 'offerss')
async def offers(callback: Message, state: FSMContext, bot: Bot):
    data = await state.get_data()
    await bot.delete_message(chat_id=chat_id1,message_id=data['id']+1)
    print(data['id'])
    await bot.send_message(callback.from_user.id, text='–¢–æ–≤–∞—Ä—ã',reply_markup=nazad_kb)
    await bot.send_message(callback.from_user.id, text='–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ç–æ–≤–∞—Ä–∞:', reply_markup=keyboard_1)

    # await state.update_data(id=callback.message_id)



# ---------------------------------------------------------------------
@dp.callback_query(F.data == 'cloth')
async def offers(callback: CallbackQuery, state: FSMContext, bot: Bot):
    global n
    n = 0
    cursor.execute(f'SELECT COUNT(*) FROM cloth')
    total = cursor.fetchone()[0]
    a = n + 1
    await bot.send_message(callback.from_user.id, text=f'[{a} –∏–∑ {total}]')
    con.commit()
    cursor.execute("SELECT * FROM cloth")
    off = cursor.fetchall()[n]
    await bot.send_photo(callback.from_user.id, photo=off[4])
    await bot.send_message(callback.from_user.id,
                           text=f'{off[1]}          \n\n–¶–µ–Ω–∞: {off[2]}\n\n–†–∞–∑–º–µ—Ä—ã: {off[3]}',
                           reply_markup=under)
    con.commit()
    await state.set_state(Kiber1.name)
    await state.update_data(type='cloth')
    await state.update_data(n=0)


@dp.callback_query(F.data == 'shoes')
async def offers(callback: CallbackQuery, state: FSMContext, bot: Bot):
    global n
    n = 0
    cursor.execute(f'SELECT COUNT(*) FROM shoes')
    total = cursor.fetchone()[0]
    a = n + 1
    await bot.send_message(callback.from_user.id, text=f'[{a} –∏–∑ {total}]')
    con.commit()
    cursor.execute("SELECT * FROM shoes")
    off = cursor.fetchall()[n]
    await bot.send_photo(callback.from_user.id, photo=off[4])
    await bot.send_message(callback.from_user.id,
                           text=f'{off[1]}          \n\n–¶–µ–Ω–∞: {off[2]}\n\n–†–∞–∑–º–µ—Ä—ã: {off[3]}',
                           reply_markup=under)
    con.commit()
    await state.set_state(Kiber1.name)
    await state.update_data(type='shoes')
    await state.update_data(n=0)


@dp.callback_query(F.data == 'other')
async def offers(callback: CallbackQuery, state: FSMContext, bot: Bot):
    global n
    n = 0
    cursor.execute(f'SELECT COUNT(*) FROM other')
    total = cursor.fetchone()[0]
    a = n + 1
    await bot.send_message(callback.from_user.id, text=f'[{a} –∏–∑ {total}]')
    con.commit()
    cursor.execute("SELECT * FROM other")
    off = cursor.fetchall()[n]
    await bot.send_photo(callback.from_user.id, photo=off[4])
    await bot.send_message(callback.from_user.id,
                           text=f'{off[1]}          \n\n–¶–µ–Ω–∞: {off[2]}\n\n–†–∞–∑–º–µ—Ä—ã: {off[3]}',
                           reply_markup=under)
    con.commit()
    await state.set_state(Kiber1.name)
    await state.update_data(type='other')
    await state.update_data(n=0)


# ---------------------------------------------------------------------------------
@dp.callback_query(F.data == 'wpered')
async def offers(callback: CallbackQuery, state: FSMContext, bot: Bot):
    data11 = await state.get_data()
    n1 = data11['n']
    n1 += 1

    cursor.execute(f'SELECT COUNT(*) FROM {data11["type"]}')
    total = cursor.fetchone()[0]
    a = n1 + 1
    await bot.send_message(callback.from_user.id, text=f'[{a} –∏–∑ {total}]')
    con.commit()
    cursor.execute(f"SELECT * FROM {data11['type']}")
    off = cursor.fetchall()[n1]
    await bot.send_photo(callback.from_user.id, photo=off[4])
    await bot.send_message(callback.from_user.id,
                           text=f'{off[1]}          \n\n–¶–µ–Ω–∞: {off[2]}\n\n–†–∞–∑–º–µ—Ä—ã: {off[3]}',
                           reply_markup=under)
    con.commit()

    await state.set_state(Kiber1.name)
    await state.update_data(n=n1)


@dp.callback_query(F.data == 'nazad')
async def offers(callback: CallbackQuery, state: FSMContext, bot: Bot):
    data = await state.get_data()
    await bot.delete_message(chat_id=chat_id1,message_id=data['id']+1)
    data11 = await state.get_data()
    n1 = data11['n']
    n1 -= 1

    cursor.execute(f'SELECT COUNT(*) FROM {data11["type"]}')
    total = cursor.fetchone()[0]
    a = n1 + 1
    await bot.send_message(callback.from_user.id, text=f'[{a} –∏–∑ {total}]')
    con.commit()
    cursor.execute(f"SELECT * FROM {data11['type']}")
    off = cursor.fetchall()[n1]
    await bot.send_photo(callback.from_user.id, photo=off[4])
    await bot.send_message(callback.from_user.id,
                           text=f'{off[1]}          \n\n–¶–µ–Ω–∞: {off[2]}\n\n–†–∞–∑–º–µ—Ä—ã: {off[3]}',
                           reply_markup=under)
    con.commit()
    await state.set_state(Kiber1.name)
    await state.update_data(n=n1)


@dp.callback_query(F.data == 'home')
async def home(callback: CallbackQuery, state: FSMContext, bot: Bot):
    await state.clear()
    await bot.send_message(callback.from_user.id,
                           f'COOLSHOP ¬©\n\n–ü–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º, ‚Ä¶ \n–ù–∞—Å—Ç–∞–ª–æ –≤—Ä–µ–º—è —É–≥–ª—É–±–∏—Ç—å—Å—è –≤ –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫–∞ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª.\n–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º: \n\n- –ë—ã—Å—Ç—Ä–æ–µ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏–µ —Å –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–æ–º –º–∞–≥–∞–∑–∏–Ω–∞ üëî\n\n- –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ ‚úåüèª\n\n- –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–∞–∂–Ω–æ–π –¥–ª—è –≤–∞—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ ‚ÑπÔ∏è\n\n–ò –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ‚Ä¶',
                           reply_markup=keyboard12)


@dp.callback_query(F.data == 'info')
async def info(callback: CallbackQuery, state: FSMContext, bot: Bot):
    data = await state.get_data()
    print(data['id'])
    await bot.delete_message(chat_id=chat_id1,message_id=data['id']+1)
    await bot.send_message(callback.from_user.id,
                           text='–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å, —É–≤–∞–∂–∞–µ–º—ã–π –∫–ª–∏–µ–Ω—Ç ü§ùüèª\n\n–í—ã –ø–µ—Ä–µ—à–ª–∏ –ø–æ –≤–∫–ª–∞–¥–∫–µ -¬´–ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è¬ª\n\n–ß—Ç–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∏–∑ —Å–µ–±—è –º–∞–≥–∞–∑–∏–Ω ?\n1) –í –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–æ–ª—å—à–æ–π –≤—ã–±–æ—Ä —Ç—Ä–µ–Ω–¥–æ–≤–æ–π, –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∏ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–π –æ–¥–µ–∂–¥—ã –Ω–∞ –ª—é–±–æ–π –≤–∫—É—Å ü´¶üíÑ\n2) –ë–ï–°–ü–õ–ê–¢–ù–ê–Ø –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≤—Å–µ–π –†–ë‚ÄºÔ∏è\n- –ï–≤—Ä–æ–ø–æ—á—Ç–∞\n- –ë–µ–ª –ø–æ—á—Ç–∞ (5 BYN)\n3) –ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤–æ–∑–≤—Ä–∞—Ç/–æ–±–º–µ–Ω —Ç–æ–≤–∞—Ä–∞\n4) –î–∞–Ω–Ω—ã–π –±–æ—Ç –∏–º–µ–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏:\n- –ü–æ–º–æ–∂–µ—Ç –≤—ã–±—Ä–∞—Ç—å –Ω—É–∂–Ω—É—é –æ–¥–µ–∂–¥—É, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç –Ω–∞–ª–∏—á–∏–µ\n- –°–≤—è–∂–µ—Ç –≤–∞—Å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –≤ —Ç–µ—á–µ–Ω–∏–∏ (5 –º–∏–Ω—É—Ç) \n- –ù–∞–π—Ç–∏ –Ω–∞—Å –≤ –¥—Ä—É–≥–∏—Ö —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö –∏ –±—ã—Ç—å –±–ª–∏–∂–µ –∫ –∫–æ–º–∞–Ω–¥–µ COOLSHOP \n\n–•–æ—Ä–æ—à–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏ —É–¥–∞—á–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫ üòâüî• ',reply_markup=nazad_kb)


# ---------------------------------------------------------------------------------------
@dp.message(Command('admin'))
async def admin(callback: CallbackQuery, state: FSMContext, bot: Bot):
    if callback.from_user.id == 1488076193 or callback.from_user.id == 1043137371 or callback.from_user.id == 7324053113:
        await bot.send_message(callback.from_user.id, text='–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', reply_markup=adminpanel)


# @dp.callback_query(F.data == 'plus')
# async def plus(callback: CallbackQuery, state: FSMContext, bot: Bot):
#     await bot.send_message(callback.from_user.id, text='–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ç–æ–≤–∞—Ä–∞',reply_markup=offers_add)

@dp.callback_query(F.data == 'cloth_add')
async def plus(callback: CallbackQuery, state: FSMContext, bot: Bot):
    await bot.send_message(callback.from_user.id, text='–í–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞')
    await state.set_state(Kiber.name)
    await state.update_data(type='cloth')


@dp.callback_query(F.data == 'shoes_add')
async def plus(callback: CallbackQuery, state: FSMContext, bot: Bot):
    await bot.send_message(callback.from_user.id, text='–í–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞')
    await state.set_state(Kiber.name)
    await state.update_data(type='shoes')


@dp.callback_query(F.data == 'other_add')
async def plus(callback: CallbackQuery, state: FSMContext, bot: Bot):
    await bot.send_message(callback.from_user.id, text='–í–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞')
    await state.set_state(Kiber.name)
    await state.update_data(type='other')


@dp.message(Kiber.name)
async def zakaz(callback: CallbackQuery, state: FSMContext, bot: Bot):
    await state.update_data(name=callback.text)
    await bot.send_message(callback.from_user.id, text='–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É')
    await state.set_state(Kiber.name1)


@dp.message(Kiber.name1)
async def zakaz(callback: CallbackQuery, state: FSMContext, bot: Bot):
    await state.update_data(price=callback.text)
    await bot.send_message(callback.from_user.id, text='–í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä—ã')
    await state.set_state(Kiber.name3)


@dp.message(Kiber.name3)
async def zakaz(callback: CallbackQuery, state: FSMContext, bot: Bot):
    await state.update_data(size=callback.text)
    await bot.send_message(callback.from_user.id, text='–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é')
    await state.set_state(Kiber.name4)


@dp.message(Kiber.name4)
async def zakaz(message: Message, state: FSMContext, bot: Bot):
    data1 = await state.get_data()
    cursor.execute(f"INSERT INTO {data1['type']}(name, price,size,photo) VALUES (?, ?, ?,?)",
                   (data1['name'], data1['price'], data1['size'], str(message.photo[-1].file_id)))
    con.commit()
    await bot.send_message(message.from_user.id, text='–£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ')
    await state.clear()


@dp.message(Command('sendall'))
async def mess(callback: CallbackQuery, bot: Bot, state: FSMContext):
    if callback.from_user.id == 1488076193 or callback.from_user.id == 1043137371 or callback.from_user.id == 7324053113:
        await bot.send_message(callback.from_user.id, text='–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é')
        await state.set_state(Send.name)
    else:
        await bot.send_message(callback.from_user.id, text='–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—É—é –∫–æ–º–∞–Ω–¥—É')


@dp.message(Send.name)
async def send(message: Message, state: FSMContext, bot: Bot):
    await state.update_data(link=message.photo[-1].file_id)
    await bot.send_message(message.from_user.id, text='–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏')
    await state.set_state(Send.name2)


@dp.message(Send.name2)
async def send(callback: CallbackQuery, state: FSMContext, bot: Bot):
    data1 = await state.get_data()
    with open("joined.txt", "r") as file:
        joinedUsers = file.readlines()
        for user in joinedUsers:
            await bot.send_photo(chat_id=user, photo=f'{data1["link"]}')
            await bot.send_message(chat_id=user, text=callback.text)
    await state.clear()


@dp.message(F.text)
async def error_msg(message: Message, bot: Bot, state: FSMContext):
    price = await state.get_data()
    print(price.get("price"))
    await bot.send_message(chat_id=message.from_user.id, text="–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—É—é –∫–æ–º–∞–Ω–¥—É")
